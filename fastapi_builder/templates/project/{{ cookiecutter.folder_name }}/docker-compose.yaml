version: "3.8"

networks:
  {{ cookiecutter.name }}-network:
    driver: bridge
    name: {{ cookiecutter.name }}-network

services:
  app:
    build: .
    ports:
      - "8000:8000"
    command: python main.py -c
    depends_on:
      - database
      - redis

{% if cookiecutter.database == "Postgres" %}
  database:
    image: postgres:12
    ports:
      - "5432:5432"
{% elif cookiecutter.database == "MySQL" %}
  database:
    container_name: {{ cookiecutter.name }}_mysql
    image: mysql:8.0.19
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456
      MYSQL_AUTH_PLUGIN: mysql_native_password
      MYSQL_DATABASE: {{ cookiecutter.database_name }}
      TZ: Asia/Shanghai
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    volumes:
      - ./docker_data/mysql:/var/lib/mysql
    networks:
      - {{ cookiecutter.name }}-network
{% endif %}

  redis:
    container_name: {{ cookiecutter.name }}_redis
    image: redis:6.0.9
    restart: always
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 6379:6379
    volumes:
      - ./docker_data/redis:/data
    networks:
      - {{ cookiecutter.name }}-network
